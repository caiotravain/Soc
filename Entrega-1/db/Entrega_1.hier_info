|toplevel
fpga_clk_50 => stepmotor:u1.clk
stepmotor_en => stepmotor:u1.en
stepmotor_dir => stepmotor:u1.dir
stepmotor_vel[0] => stepmotor:u1.vel[0]
stepmotor_vel[1] => stepmotor:u1.vel[1]
stepmotor_pio[0] << stepmotor:u1.phases[0]
stepmotor_pio[1] << stepmotor:u1.phases[1]
stepmotor_pio[2] << stepmotor:u1.phases[2]
stepmotor_pio[3] << stepmotor:u1.phases[3]


|toplevel|stepmotor:u1
clk => enable.CLK
clk => freio.CLK
clk => limite[0].CLK
clk => limite[1].CLK
clk => limite[2].CLK
clk => limite[3].CLK
clk => limite[4].CLK
clk => limite[5].CLK
clk => limite[6].CLK
clk => limite[7].CLK
clk => limite[8].CLK
clk => limite[9].CLK
clk => limite[10].CLK
clk => limite[11].CLK
clk => limite[12].CLK
clk => limite[13].CLK
clk => limite[14].CLK
clk => limite[15].CLK
clk => limite[16].CLK
clk => limite[17].CLK
clk => limite[18].CLK
clk => limite[19].CLK
clk => limite[20].CLK
clk => limite[21].CLK
clk => limite[22].CLK
clk => limite[23].CLK
clk => limite[24].CLK
clk => limite[25].CLK
clk => steps[0].CLK
clk => steps[1].CLK
clk => steps[2].CLK
clk => steps[3].CLK
clk => steps[4].CLK
clk => steps[5].CLK
clk => steps[6].CLK
clk => steps[7].CLK
clk => steps[8].CLK
clk => steps[9].CLK
clk => steps[10].CLK
clk => steps[11].CLK
clk => steps[12].CLK
clk => steps[13].CLK
clk => steps[14].CLK
clk => steps[15].CLK
clk => steps[16].CLK
clk => steps[17].CLK
clk => steps[18].CLK
clk => steps[19].CLK
clk => steps[20].CLK
clk => steps[21].CLK
clk => steps[22].CLK
clk => steps[23].CLK
clk => steps[24].CLK
clk => steps[25].CLK
clk => counter2[0].CLK
clk => counter2[1].CLK
clk => counter2[2].CLK
clk => counter2[3].CLK
clk => counter2[4].CLK
clk => counter2[5].CLK
clk => counter2[6].CLK
clk => counter2[7].CLK
clk => counter2[8].CLK
clk => counter2[9].CLK
clk => counter2[10].CLK
clk => counter2[11].CLK
clk => counter2[12].CLK
clk => counter2[13].CLK
clk => counter2[14].CLK
clk => counter2[15].CLK
clk => counter2[16].CLK
clk => counter2[17].CLK
clk => counter2[18].CLK
clk => counter2[19].CLK
clk => counter2[20].CLK
clk => counter2[21].CLK
clk => counter2[22].CLK
clk => counter2[23].CLK
clk => counter2[24].CLK
clk => counter2[25].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => state~5.DATAIN
en => enable.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => steps.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
en => limite.OUTPUTSELECT
dir => phases.OUTPUTSELECT
dir => phases.OUTPUTSELECT
dir => phases.OUTPUTSELECT
dir => phases.OUTPUTSELECT
vel[0] => Equal0.IN1
vel[0] => Equal1.IN0
vel[0] => Equal2.IN1
vel[0] => Equal3.IN1
vel[1] => Equal0.IN0
vel[1] => Equal1.IN1
vel[1] => Equal2.IN0
vel[1] => Equal3.IN0
phases[0] <= phases.DB_MAX_OUTPUT_PORT_TYPE
phases[1] <= phases.DB_MAX_OUTPUT_PORT_TYPE
phases[2] <= phases.DB_MAX_OUTPUT_PORT_TYPE
phases[3] <= phases.DB_MAX_OUTPUT_PORT_TYPE


